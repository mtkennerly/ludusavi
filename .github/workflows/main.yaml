on:
  - push
  - pull_request

name: Main

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
            artifact-name: win64
            artifact-file: ludusavi.exe
          - os: windows-latest
            rust-target: i686-pc-windows-msvc
            artifact-name: win32
            artifact-file: ludusavi.exe
          - os: ubuntu-18.04
            rust-target: x86_64-unknown-linux-gnu
            artifact-name: linux
            artifact-file: ludusavi
          - os: macos-latest
            rust-target: x86_64-apple-darwin
            artifact-name: mac
            artifact-file: ludusavi
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: mtkennerly/dunamai-action@v1
        with:
          env-var: LUDUSAVI_VERSION
          args: --style semver
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-${{ matrix.rust-target }}
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.rust-target }}
      - if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: sudo apt-get update && sudo apt-get install -y gcc libxcb-composite0-dev
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v1
        with:
          name: ludusavi-v${{ env.LUDUSAVI_VERSION }}-${{ matrix.artifact-name }}
          path: target/release/${{ matrix.artifact-file }}

  test:
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install -y gcc libxcb-composite0-dev
      - if: ${{ matrix.os == 'windows-latest' }}
        run: reg import tests/ludusavi.reg
      - if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cd tests/root3/game5 && cmd /c "mklink /J data-symlink data"
      - if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cd tests/root3/game5 && ln -s data data-symlink
      - uses: actions-rs/cargo@v1
        with:
          command: test

  lint:
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
